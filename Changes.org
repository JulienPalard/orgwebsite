#+TITLE:     Org mode for Emacs -- Release notes
#+AUTHOR:    Carsten Dominik
#+EMAIL:     carsten at orgmode dot org
#+LANGUAGE:  en
#+STARTUP:   hidestars
#+LINK:      git http://orgmode.org/w/?p=org-mode.git;a=commit;h=%s
#+LINK:      doc http://orgmode.org/worg/doc.html#%s
#+OPTIONS:   H:3 num:nil toc:t \n:nil @:t ::t |:t ^:t *:t TeX:t author:nil <:t LaTeX:t
#+KEYWORDS:  Org Org-mode Emacs outline planning note authoring project plain-text LaTeX HTML
#+DESCRIPTION: Org Org-mode Emacs Changes ChangeLog release notes
#+STYLE:     <link rel="stylesheet" href="org-changes.css" type="text/css" />

#+BEGIN_HTML
<div id="top"><p><em>Org mode is for keeping notes, maintaining TODO lists, planning
projects, and authoring documents with a fast and effective plain-text system.</em></p></div>
#+END_HTML

* Version 8.0

This page list changes from the *development version* of Org-mode.
Changes against the latest stable version are [[file:Changes_old.org][here]].

/This version is only a draft.  It will be completed when Org 8.0 will be
released./

** Installation

   Installation instructions have been updated and simplified.

   If you have troubles installing or updating Org, focus on these
   instructions:

   - when updating via a =.zip/.tar.gz= file, you only need to set the
     =load-path= in your =.emacs=.  Set it before any other Org
     customization that would call autoloaded Org functions.

   - when updating by pulling Org's Git repository, make sure to create the
     correct autoloads.  You can do this by running =~$ make autoloads= (to
     only create the autoloads) or by running =~$ make= (to also compile
     the Emacs lisp files.)  =~$ make help= and =~$ make helpall= gives you
     detailed explanations.

   - when updating through ELPA (either from GNU ELPA or from Org ELPA),
     you have to install Org's ELPA package in a session where no Org
     function has been called already.

   When in doubt, run =M-x org-version RET= and see if you have a mixed-up
   installation.

   See http://orgmode.org/org.html#Installation for details.

** Incompatible changes

   Org 8.0 is the most disruptive major version of Org.

   If you configured export options, you will have to update some of them.

   If you used =#+ATTR_*= keywords, the syntax of the attributes changed
   and you will have to update them.

   Below is a list of changes for which you need to take action.

   See http://orgmode.org/worg/org-8.0.html for the most recent version of
   this list and for detailed instructions on how to migrate.

**** New export engine

     Org 8.0 comes with a new export engine written by Nicolas Goaziou.
     This export engine relies on =org-element.el= (Org's syntax parser),
     which was already in Org's core.  This new export engine triggered the
     rewriting of /all/ export back-ends.

     The most visible change is the export dispatcher, accessible through
     the keybinding =C-c C-e=.  By default, this menu only shows some of
     the built-in export formats, but you can add more formats by loading
     them directly (e.g., =(require 'ox-texinfo)= or by configuring the
     option =org-export-backends=.

     More contributed back-ends are available from the =contrib/=
     directory, the corresponding files start with the =ox-= prefix.

     If you customized an export back-end (like HTML or LaTeX), you will
     need to rename some options so that your customization is not lost.
     Typically, an option starting with =org-export-html-= is now named
     =org-html-export-=.  See the manual for details and check [[http://orgmode.org/worg/org-8.0.html][this Worg
     page]] for directions.

**** New syntax for #+ATTR_HTML/LaTeX/... options

     : #+ATTR_HTML width="200px"

     should now be written

     : #+ATTR_HTML :width 200px

     Keywords like =#+ATTR_HTML= and =#+ATTR_LaTeX= are defined in their
     respective back-ends, and the list of supported parameters depends on
     each backend.  See Org's manual for details.

**** =org-remember.el= has been removed

     You cannot use =remember.el= anymore to capture notes.

     Support for remember templates has been obsoleted since long, it is
     now fully removed.

     Use =M-x org-capture-import-remember-templates RET= to import your
     remember templates into capture templates.

**** =org-jsinfo.el= has been merged into =ox-html.el=

     If you were requiring =ox-jsinfo.el= in your =.emacs.el= file, you
     will have to remove this requirement from your initialization file.

**** Note for third-party developers

     The name of the files for export back-end have changed: we now use the
     prefix =ox-= for those files (like we use the =ob-= prefix for Babel
     files.)  For example =org-html.el= is now =ox-html.el=.

     If your code relies on these files, please update the names in your
     code.

**** Packages moved from core to contrib

     Since packages in Org's core are meant to be part of GNU Emacs, we try
     to be minimalist when it comes to adding files into core.  For 8.0, we
     moved some contributions into the =contrib/= directory.

     The rationale for deciding that these files should live in =contrib/=
     is either because they rely on third-part softwares that are not
     included in Emacs, or because they are not targetting a significant
     user-base.

     - org-colview-xemacs.el
     - org-mac-message.el
     - org-mew.el
     - org-wl.el
     - ox-freedmind.el
     - ox-taskjuggler.el

     Note that =ox-freedmind.el= has been rewritten by Jambunathan,
     =org-mew.el= has been enhanced by Tokuya Kameshima and
     =ox-taskjuggler.el= by Nicolas Goaziou and others.

     Also, the Taskjuggler exporter now uses TJ3 by default.  John Hendy
     wrote [[http://orgmode.org/worg/org-tutorials/org-taskjuggler3.html][a tutorial on Worg]] for the TJ3 export.

** New packages in core

*** ob-makefile.el by Eric Schulte and Thomas S. Dye

    =ob-makefile.el= implements Org Babel support for Makefile tangling.

*** ox-man.el by Luis Anaya

    =ox-man.el= allows you to export Org files to =man= pages.

*** ox-md.el by Nicolas Goaziou

    =ox-md.el= allows you to export Org files to Markdown files, using the
    vanilla [[http://daringfireball.net/projects/markdown/][Markdown syntax]].

*** ox-texinfo.el by Jonathan Leech-Pepin

    =ox-texinfo.el= allows you to export Org files to [[http://www.gnu.org/software/texinfo/][Texinfo]] files.

** New packages in contrib

*** ob-julia.el by G. Jay Kerns

    [[http://julialang.org/][Julia]] is a new programming language.

    =ob-julia.el= provides Org Babel support for evaluating Julia source
    code.

*** ob-mathomatic.el by Luis Anaya

    [[http://www.mathomatic.org/][mathomatic]] a portable, command-line, educational CAS and calculator
    software, written entirely in the C programming language.

    =ob-mathomatic.el= provides Org Babel support for evaluating mathomatic
    entries.

*** ob-tcl.el by Luis Anaya

    =ob-tcl.el= provides Org Babel support for evaluating [[http://www.tcl.tk/][Tcl]] source code.

*** org-bullets.el by Evgeni Sabof

    Display bullets instead of stars for headlines.

    Also see [[http://orgmode.org/worg/org-faq.html#sec-8-12][this updated FAQ]] on how to display another character than "*"
    for starting headlines.

*** org-favtable.el by Marc-Oliver Ihm

    =org-favtable.el= helps you to create and update a table of favorite
    locations in org, keeping the most frequently visited lines right at
    the top.  This table is called "favtable".  See the documentation on
    [[http://orgmode.org/worg/org-contrib/org-favtable.html][Worg]].

*** ox-confluence.el by SÃ©bastien Delafond

    =ox-confluence.el= lets you convert Org files to [[https://confluence.atlassian.com/display/DOC/Confluence%2BWiki%2BMarkup][Confluence Wiki]] files.

*** ox-deck.el and ox-s5.el by Rick Frankel

    [[http://imakewebthings.com/deck.js/][deck.js]] is a javascript library for displaying HTML ages as
    presentations.  =ox-deck.el= exports Org files to HTML presentations
    using =deck.js=.

    [[http://meyerweb.com/eric/tools/s5/][s5]] is a set of scripts which also allows to display HTML pages as
    presentations.  =ox-s5.el= exports Org files to HTML presentations
    using =s5=.

*** ox-groff.el by Luis Anaya and Nicolas Goaziou

    The [[http://www.gnu.org/software/groff/][groff]] (GNU troff) software is a typesetting package which reads
    plain text mixed with formatting commands and produces formatted
    output.

    Luis Anaya and Nicolas Goaziou implemented =ox-groff.el= to allow
    conversion from Org files to groff.

*** ox-koma-letter.el by Nicolas Goaziou and Alan Schmitt

    This back-end allow to export Org pages to the KOMA Scrlttr2 format.

*** ox-rss.el by Bastien

    This back-end lets you export Org pages to RSS 2.0 feeds.  Combined
    with the HTML publishing feature, this allows you to build a blog
    entirely with Org.

** New features

# syntaxe des attributs
# completion sur les mots clefs
# macros

*** Structure editing

**** =C-u C-u M-RET= will insert a heading at the end of the parent subtree
**** Cycling to the =CONTENTS= view will keep inline tasks folded

=org-cycle-hook= as a new function =org-cycle-hide-inline-tasks= which
prevents the display of inline tasks when showing the content of a subtree.
**** When transposing words, markup characters are now part of the words

In Emacs, you can transpose words with =M-t=.  Transposing =*these*
_words__= will preserve markup.

**** New commands =org-next-block= and =org-previous-block=

These commands allow you to go to the previous block (=C-c M-b= or the
speedy key =B=) or to the next block (=C-c M-f= or the speedy key =F=.)

**** New commands =org-drag-line-forward= and =org-drag-line-backward=

These commands emulate the old behavior of =M-<down>= and =M-<up>= but are
now bound to =S-M-<down>= and =S-M-<up>= respectively, since =M-<down>= and
=M-<up>= now drag the whole element at point (a paragraph, a table, etc.)
forward and backward.

**** New option =org-agenda-restriction-lock-highlight-subtree=

This defaults to =t= so that the whole subtree is highlighted when you
restrict the agenda view to it with =C-c C-x <= (or the speed command =<=).
The default setting helps ensuring that you are not adding tasks after the
restricted region.  If you find this highlighting too intrusive, set this
option to =nil=.
**** =C-c -= in a region will make a list item for each line, C-u C-u for the first line
**** When a list item has a checkbox, inserting a new item will use a checkbox too
**** New option =orgstruct-heading-prefix-regexp=

For example, setting this option to "^;;; " in Emacs lisp files and using
=orgstruct-mode= in those files will allow you to cycle through visibility
states as if lines starting with ";;; *..." where headlines.

In general, you want to set =orgstruct-heading-prefix-regexp= as a file
local variable.

**** TODO FIXME Don't activate speedy keys within code src blocks (?)
*** Scheduled/deadline

**** Implement "delay" cookies for scheduled items.

If you want to delay the display of a scheduled task in the agenda, you can
now use a delay cookie like this: =SCHEDULED: <2004-12-25 Sat -2d>=.  The
task is still scheduled on the 25th but will appear in your agenda starting
from two days later (i.e. from March 27th.)

Imagine for example that your co-workers are not done in due time and tell
you "we need two more days".  In that case, you may want to delay the
display of the task in your agenda by two days, but you still want the task
to appear as scheduled on March 25th.

In case the task contains a repeater, the delay is considered to affect all
occurrences; if you want the delay to only affect the first scheduled
occurrence of the task, use =--2d= instead.  See =org-scheduled-delay-days=
and =org-agenda-skip-scheduled-delay-if-deadline= for details on how to
control this globally or per agenda.

**** Use =C-u C-u C-s= will insert a delay cookie for scheduled tasks.
**** Use =C-u C-u C-d= will insert a warning delay for deadline tasks.
*** Calendar, diary and appts

**** New variable =org-read-date-minibuffer-local-map=

By default, this new local map uses "." to go to today's date, like in the
normal =M-x calendar RET=.  If you want to deactivate this and to reassign
the "@" key to =calendar-goto-today=, use this:

#+BEGIN_SRC emacs-lisp
  ;; Unbind "." in Org's calendar:
  (define-key org-read-date-minibuffer-local-map (kbd ".") nil)

  ;; Bind "@" to `calendar-goto-today':
  (define-key org-read-date-minibuffer-local-map
              (kbd "@")
              (lambda () (interactive) (org-eval-in-calendar '(calendar-goto-today))))
#+END_SRC

**** In Org's calendar, =!= displays diary entries of the date at point

This is useful when you want to check if you don't already have an
appointment when setting new ones with =C-c .= or =C-c s=.  =!= will
call =diary-view-entries= and display the diary in a separate buffer.

**** =org-diary=: only keep the descriptions of links

=org-diary= returns diary information from Org files, but it returns it
in a diary buffer, not in an Org mode buffer.  When links are displayed,
only show their description, not the full links.
*** Agenda

**** New agenda type =agenda*= and entry types =:scheduled* :deadline*=

When defining agenda custom commands, you can now use =agenda*=:
this will list entries that have both a date and a time.  This is
useful when you want to build a list of appointments.

You can also set =org-agenda-entry-types= either globally or locally in
each agenda custom command and use =:timestamp*= and/or =:deadline*= there.

Another place where this is useful is your =.diary= file:

: %%(org-diary :scheduled*) ~/org/rdv.org

This will list only entries from =~/org/rdv.org= that are scheduled with a
time value (i.e. appointments).

**** "=" in agenda view now filter by regexp

You can now filter agenda entries by regular expressions using ~=~.  =C-u
== will filter entries out.  Regexp filters are cumulative.  You can set
=org-agenda-regexp-filter-preset= to suit your needs in each agenda view.

**** =|= in agenda view now reset all filters

Since it's common to combine tag filters, category filters, and now regexp
filters, there is a new command =|= to reset all filters at once.

**** New options to limit the number of agenda entries

You can now limit the number of entries in an agenda view.  This is
different from filters: filters only /hide/ the entries in the agenda,
while limits are set while generating the list of agenda entries.

These new options are available:

- =org-agenda-max-entries= :: limit by number of entries.
- =org-agenda-max-todos= :: limit by number of TODOs.
- =org-agenda-max-tags= :: limit by number of tagged entries.
- =org-agenda-max-effort= :: limit by effort (minutes)

For example, if you locally set =org-agenda-max-todos= to 3 in an agenda
view, the agenda will be limited to the first three todos.  Other entries
without a TODO keyword or beyond the third TODO headline will be ignored.

When setting a limit (e.g. about an effort's sum), the default behavior is
to exclude entries that cannot be checked against (e.g. entries that have
no effort property.)  To include other entries too, you can set the limit
to a negative number.  For example (setq org-agenda-max-tags 3) will not
show the fourth tagged headline (and beyond), but it will also show
non-tagged headlines.

**** =~= in agenda view now temporarily set limits

You can hit =~= in the agenda to temporarily set limits: this will
regenerate the agenda as if the limits were set.  This is useful for
example when you want to only see a list of =N= tasks, or a list of tasks
that take only =N= minutes.

**** Allow writing an agenda to an =.org= file

You can now write an agenda view to an =.org= file.  It copies the
headlines and their content (but not subheadings) into the new file.

This is useful when you want to quickly share an agenda containing the full
list of notes.

**** Implement new agenda sorting strategies

=org-agenda-sorting-strategy= allows these new sorting strategies:

| Strategy       | Explanations                             |
|----------------+------------------------------------------|
| timestamp-up   | Sort by any timestamp, early first       |
| timestamp-down | Sort by any timestamp, late first        |
| scheduled-up   | Sort by scheduled timestamp, early first |
| scheduled-down | Sort by scheduled timestamp, late first  |
| deadline-up    | Sort by deadline timestamp, early first  |
| deadline-down  | Sort by deadline timestamp, late first   |
| ts-up          | Sort by active timestamp, early first    |
| ts-down        | Sort by active timestamp, late first     |
| tsia-up        | Sort by inactive timestamp, early first  |
| tsia-down      | Sort by inactive timestamp, late first   |

**** Use =%s= for displaying "breadcrumbs" in the agenda view

=org-agenda-prefix-format= now allows to use a =%b= formatter to tell Org
to display "breadcrumbs" in the agenda view.

This is useful when you want to display the task hierarchy in your agenda.

**** Use =%l= for displaying the headline's level in the agenda view

=org-agenda-prefix-format= allows to use a =%l= formatter to tell Org to
display entries with additional spaces corresponding to their level in the
outline tree.

**** =org-agenda-write= will ask before overwriting an existing file
**** New option =org-agenda-search-view-max-outline-level=

This option sets the maximum outline level to display in search view.
E.g. when this is set to 1, the search view will only show headlines of
level 1.

**** New option =org-agenda-todo-ignore-time-comparison-use-seconds=

This allows to compare times using seconds instead of days when honoring
options like =org-agenda-todo-ignore-*= in the agenda display.

**** New option =org-agenda-entry-text-leaders=

This allows you to get rid of the ">" character that gets added in front of
entries excerpts when hitting =E= in the agenda view.

**** New formatting string for past deadlines in =org-agenda-deadline-leaders=
**** New allowed value =repeated-after-deadline= for =org-agenda-skip-scheduled-if-deadline-is-shown=

When =org-agenda-skip-scheduled-if-deadline-is-shown= is set to
=repeated-after-deadline=, the agenda will skip scheduled items if they are
repeated beyond the current dealine.

**** New option for =org-agenda-skip-deadline-prewarning-if-scheduled=

: This variable may be set to nil, t, the symbol `pre-scheduled',
: or a number which will then give the number of days before the actual
: deadline when the prewarnings should resume.  The symbol `pre-scheduled'
: eliminates the deadline prewarning only prior to the scheduled date.

Read the full docstring for details.

# http://orgmode.org/cgit.cgi/org-mode.git/commit/?id=796fca3f18e6aab9f5d73f47e284b4e08fcc2596

**** =org-class= now supports holiday strings in the skip-weeks parameter

    For example, this task will now be skipped only on new year's day:

    : * Task
    :   <%%(org-class 2012 1 1 2013 12 12 2 "New Year's Day")>
*** Group tags

Using =#+TAGS: { Tag1 : Tag2 Tag3 }= will define =Tag1= as a /group tag/
(note the colon after =Tag1=).  If you search for =Tag1=, it will return
headlines containing either =Tag1=, =Tag2= or =Tag3= (or any combinaison
of those tags.)

You can use group tags for sparse tree in an Org buffer, for creating
agenda views, and for filtering.

See http://orgmode.org/org.html# FIXME for details.

*** Links

**** =C-u C-u M-x org-store-link RET= will ignore non-core link functions

Org knows how to store links from Org buffers, from info files and from
other Emacs buffers.  Org can be taught how to store links from any buffer
through new link protocols (see [[http://orgmode.org/org.html#Adding-hyperlink-types]["Adding hyperlink types"]] in the manual.)

Sometimes you want Org to ignore added link protocols and store the link
as if the protocol was not known.

You can now do this with =C-u C-u M-x org-store-link RET=.

**** =C-u C-u C-u M-x org-store-link RET= on an active region will store links for each lines

Imagine for example that you want to store a link for every message in a
Gnus summary buffer.  In that case =C-x h C-u C-u C-u M-x org-store-link
RET= will store a link for every line (i.e. message) if the region is
active.

**** =C-c C-M-l= will add a default description for links which don't have one

=C-c C-M-l= inserts all stored links.  If a link does not have a
description, this command now adds a default one, so that we are not mixing
with-description and without-description links when inserting them.

**** FIXME No curly braces to bracket links within internal links
**** FIXME When storing links and there is a keyword at point, use the keyword

# org.el (org-store-link): Use keyword at point as the search string

*** Table

**** Switching between #+TBLFM lines

If you have several =#+TBLFM= lines below a table, =C-c C-c= on a line will
apply the formulas from this line, and =C-c C-c= on another line will apply
those other formulas.

**** You now use "nan" for empty fields in Calc formulas

If empty fields are of interest it is recommended to reread the section
"3.5.2 Formula syntax for Calc" of the manual because the description for
the mode strings has been clarified and new examples have been added
towards the end.

**** Handle localized time-stamps in formulas evaluation
**** New lookup functions

http://orgmode.org/cgit.cgi/org-mode.git/commit/?id=e375cfd834b8cd9acc47b396578f32ca2cca6632

=org-loopup-first=
=org-loopup-last=
=org-loopup-all=

*** Clocking

**** New option =org-clock-rounding-minutes=
**** New option =org-time-clocksum-use-effort-durations=
**** New option =org-clock-x11idle-program-name=
**** New option =org-use-last-clock-out-time-as-effective-time=

When non-nil, use the last clock out time for =org-todo=.
Note that this option has precedence over the combined use of
=org-use-effective-time= and =org-extend-today-until=.

**** =S-<left/right>= on a clocksum column will update the sum by updating the last clock
**** =C-u 3 C-S-<up/down>= will update clock timestamps synchronously by 3 units
**** New parameter =:wstart= for clocktables to define the week start day
**** New parameter =:mstart= to state the starting day of the month
**** Allow relative times in clocktable tstart and tend options
**** The clocktable summary is now a caption
**** =:tstart= and =:tend= and friends allow relative times like "<-1w>" or "<now>"

*** Startup

These new startup keywords are now available:

| Startup keyword                  | Option                                      |
|----------------------------------+---------------------------------------------|
| =#+STARTUP: logdrawer=           | =(setq org-log-into-drawer t)=              |
| =#+STARTUP: nologdrawer=         | =(setq org-log-into-drawer nil)=            |
|----------------------------------+---------------------------------------------|
| =#+STARTUP: logstatesreversed=   | =(setq org-log-states-order-reversed t)=    |
| =#+STARTUP: nologstatesreversed= | =(setq org-log-states-order-reversed nil)=  |
|----------------------------------+---------------------------------------------|
| =#+STARTUP: latexpreview=        | =(setq org-startup-with-latex-preview t)=   |
| =#+STARTUP: nolatexpreview=      | =(setq org-startup-with-latex-preview nil)= |

*** Babel

**** New =:post= header argument post processes results
     This header argument may be used to pass the results of the
     current code block through another code block for
     post-processing.  See the manual for example usage.

**** New Babel files only need to (require 'ob)

When writing a new Babel file, you now only need to use =(require 'ob)=
instead of requiring each Babel library one by one.

**** C-u C-u M-x org-babel-tangle RET will tangle by the target file of the block at point
**** Use C-c C-k for `org-edit-src-abort'
**** FIXME New option =org-edit-src-turn-on-auto-save=
**** New option =org-edit-src-auto-save-idle-delay=

org-src.el: Prevent saving when editing fixed-width buffer, exiting will
save already

org-src.el (org-edit-src-auto-save-idle-delay): Deactivate auto-saving by
default

New possibility of using auto-save-mode

**** Don't collect blocks in commented out headings
**** Do not ask for confirmation if cached value is current
**** New variable =org-babel-hash-show-time= to show a time-stamp in the result hash
**** ob-sql.el

Gary Oberbrunner (1):
      Improvements to Org SQL support

http://orgmode.org/cgit.cgi/org-mode.git/commit/?id=e2b17ccc52826416e6b53d48c180ffa71f8fccdf

**** ob-python.el

=org-babel-python-command= and =org-babel-python-mode= are now customizable
variables.
*** Export

**** New export dispatcher
***** Make repeating a subtree-restricted export command remember the subtree

**** New default value of =org-export-copy-to-kill-ring= is 'if-interactive
**** LaTeX

***** ox-latex: Support tikz images, :width, and :height

**** HTML
***** =org-html-coding-system= is now =utf-8=
***** New default for org-html-divs
***** CSS changes
****** Add CSS classes to list tags
****** New CSS .underline and #org-div-home-and-up.

**** org-man.el (org-man-export): New function to export links of type "man"

*** Faces

**** In the agenda, use `org-todo-keyword-faces' to highlight selected TODO keywords.
**** Org now fontifies radio link targets by default.
**** New face `org-priority'.  Enhance fontification of priority cookies in agenda.
**** New face `org-tag-group' for group tags

** Miscellaneous

*** FIXME org-html-table-row incompatible
*** New option =org-image-actual-width=

This option allows you to change the width of in-buffer displayed images.
The default is to use the actual width of the image, but you can use a
fixed value for all images, or fall back on an attribute like

: #+attr_html: :width 300px

*** When sorting entries/items, only the description of hidden links is considered

Now Org will sort this list

: - [[http://abc.org][B]]
: - [[http://def.org][A]]

like this:

: - [[http://def.org][A]]
: - [[http://abc.org][B]]

by comparing the description, not the links.
Same when sorting headlines instead of list items.

*** New speedy key =s= pour =org-narrow-to-subtree=
*** org-protocol: Pass optional value using query in url to capture from protocol
*** Support using =git-annex= with Org attachments

From http://git-annex.branchable.com:

: git-annex allows managing files with git, without checking the file
: contents into git.  While that may seem paradoxical, it is useful when
: dealing with files larger than git can currently easily handle, whether due
: to limitations in memory, time, or disk space.

You can now use =git-annex= with Org attachements.

*** When no refile history, use the current filename
*** When you cannot change the TODO state of a task, Org displays the blocking task
*** New option =org-mobile-allpriorities=
*** org-bibtex.el now use =visual-line-mode= instead of the deprecated =longlines-mode=
*** Allow =C-1= as a prefix for =org-agenda-capture= and =org-capture=

With a =C-1= prefix, use the =HH:MM= value at point (if any) or the current
=HH:MM= time.

*** Capture: Expand keywords within %(sexp) placeholder in template
*** Allow to contextualize capture and agenda commands by checking the name of the buffer

=org-capture-templates-contexts= and =org-agenda-custom-commands-contexts=
allow you to define what capture templates and what agenda commands should
be available in various contexts.  It is now possible for the context to
check against the name of the buffer.

*** =org-format-latex-options= allows to set the foreground/background colors automatically
*** New command =org-set-property-and-value= bound to =C-c C-x P=

This command allows you to quickly add both the property and its value.  It
is useful in buffers where there are many properties and where =C-c C-x p=
can slow down the flow of editing too much.

*** New option =org-archive-file-header-format=
*** =org-drill.el= has been updated to version 2.3.7
*** Add the "neg" entity in =org-entities=
*** Use =user-error= instead of =error= in many places (move and table commands)

A =user-error= results from an incorrect manipulation of the user, while an
=error= results from a problem in the program.  In the code, we replaced
many occurrences of =error= by =user-error=, since Org is often signaling
those.

*** New function =org-docview-export= to export docview links
*** New behavior of =org-clone-subtree-with-time-shift=

The default is to only ask for a number of clones.  When called with a
universal prefix argument =C-u=, it will prompt you for a time-shift only
if there is a time-stamp in the task you want to clone.

*** Babel
**** adding :eps header argument to ditaa code blocks
*** contrib/

**** New option to start Gnus with `gnus-no-server'
**** Various improvements to org-contacts.el (Daimrod)
**** Org distribution comes with htmlize.el v1.43
**** Orgpan (Jonas Bernoulli)

      Orgpan: resize the correct window
      Orgpan: quiet byte-compiler



**** org-mac-iCal.el (org-mac-iCal): Support version 10.8.

** Outside Org

*** poporg and outorg

: Two new libraries ('poporg' by FranÃ§ois Pinard and 'outorg' by Thorsten
: Jolitz) now enable editing of comment-sections from source-code buffers
: in temporary Org-mode buffers, making the full editing power of Org-mode
: available. 'outorg' comes together with 'outshine' and 'navi-mode', two
: more libraries by Thorsten Jolitz with the goal to give source-code
: buffers the 'look & feel' of Org-mode buffers while greatly improving
: navigation and structure editing. A detailed description can be found
: here: http://orgmode.org/worg/org-tutorials/org-outside-org.html

Here are two screencasts demonstrating Thorsten tools:
- http://youtu.be/nqE6YxlY0rw
- http://www.youtube.com/watch?v=II-xYw5VGFM

*** MobileOrg for iOS

MobileOrg for iOS back in the App Store The 1.6.0 release was focused on
the new Dropbox API and minor bug fixes but also includes a new ability to
launch in Capture mode.  Track development and contribute [[https://github.com/MobileOrg/mobileorg/issues][on github]].

* Older changes

For older Changes, see [[file:Changes_old.org][old changes]].
