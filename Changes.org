#+TITLE:     Org mode for Emacs -- Release notes
#+AUTHOR:    Carsten Dominik
#+EMAIL:     carsten at orgmode dot org
#+LANGUAGE:  en
#+STARTUP:   indent hidestars
#+LINK:      git http://orgmode.org/w/?p=org-mode.git;a=commit;h=%s
#+LINK:      doc http://orgmode.org/worg/doc.html#%s
#+OPTIONS:   H:3 num:nil toc:t \n:nil @:t ::t |:t ^:t *:t TeX:t author:nil <:t LaTeX:t
#+KEYWORDS:  Org Org-mode Emacs outline planning note authoring project plain-text LaTeX HTML
#+DESCRIPTION: Org Org-mode Emacs Changes ChangeLog release notes
#+STYLE:     <link rel="stylesheet" href="org-changes.css" type="text/css" />

#+BEGIN_HTML
<div id="top"><p><em>Org mode is for keeping notes, maintaining TODO lists, doing project
planning, and authoring with a fast and effective plain-text system.</em></p></div>
#+END_HTML

* Version 7.9.2

** New committers who signed the FSF copyright assigment

Welcome and thanks to these new core contributors:

- Abdó Roig-Maranges
- Andrew Hyatt
- Andrzej Lichnerowicz
- Ethan Ligon
- Feng Shu
- George Kettleborough
- Henning Dietmar Weiss
- Ilya Shlyakhter
- Ivan Kanis
- Konrad Hinsen
- Madan Ramakrishnan
- Max Mikhanosha
- Moritz Ulrich
- Rick Frankel
- Toby Cubitt

** Online documentation for hooks, commands and options

You can read the documentation for hooks, commands (i.e. interactive
functions) and options (i.e. customizable variables) [[http://orgmode.org/worg/doc.html][online]].  Clicking on a
command/option in this ChangeLog will take you to the online documentation
for that command/option.

** New ELPA repository for Org packages

You can now add the Org ELPA repository like this:

#+BEGIN_SRC emacs-lisp
(add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/") t)
#+END_SRC

It contains both the =org-*.tar= package (the core Org distribution, also
available through http://elpa.gnu.org) and the =org-plus*.tar= package (the
extended Org distribution, with non-GNU packages from the =contrib/=
directory.)

See http://orgmode.org/elpa/

** Overview of the new keybindings

| Keybinding      | Speedy | Command                     |
|-----------------+--------+-----------------------------|
| =C-c C-x C-z=   |        | [[doc::org-clock-resolve][org-clock-resolve]]           |
| =C-c C-x C-q=   |        | [[doc::org-clock-cancel][org-clock-cancel]]            |
| =C-c C-x C-x=   |        | [[doc::org-clock-in-last][org-clock-in-last]]           |
| =M-h=           |        | [[doc::org-mark-element][org-mark-element]]            |
| =*=             |        | [[doc::org-agenda-bulk-mark-all][org-agenda-bulk-mark-all]]    |
| =C-c C-M-l=     |        | [[doc::org-insert-all-links][org-insert-all-links]]        |
| =C-c C-x C-M-v= |        | [[doc::org-redisplay-inline-images][org-redisplay-inline-images]] |
| =C-c C-x E=     | =E=    | [[doc::org-inc-effort][org-inc-effort]]              |
|                 | =#=    | [[doc::org-toggle-comment][org-toggle-comment]]          |
|                 | =:=    | [[doc::org-columns][org-columns]]                 |
|                 | =W=    | Set =APPT_WARNTIME=         |
| =k=             |        | [[doc::org-agenda-capture][org-agenda-capture]]          |
| C-c ,           | ,      | [[doc::org-priority][org-priority]]                |

** New build system and new packages

*** New build system

Achim implemented a new build system.

The basic method for installing Org is the same:

1. Download or clone Org.
2. run `make install' from the Org directory.
3. Add (require 'org-install) in your .emacs.el.

But the build system is now more flexible and can be more easily
adapted to suit your needs.

See http://orgmode.org/worg/dev/org-build-system.html for details.

*** New packages in core

**** =org-eshell.el= by Konrad Hinsen is now in Org's core

=org-eshell.el= allows you to create links from [[http://www.gnu.org/software/emacs/manual/html_node/eshell/index.html][Eshell]].

*** New packages in contrib/

Note: The =EXPERIMENTAL/= directory has been deleted.  The files
have been moved to the =contrib/lisp/= directory.

**** =org-notify.el= by Peter Münster

From the comment section:

: Get notifications, when there is something to do.
: Sometimes, you need a reminder a few days before a deadline, e.g. to buy a
: present for a birthday, and then another notification one hour before to
: have enough time to choose the right clothes.
: For other events, e.g. rolling the dustbin to the roadside once per week,
: you probably need another kind of notification strategy.
: This package tries to satisfy the various needs.

**** =org-bibtex-extras.el= by Eric Schulte

From the comment section:

: This file add some extra functionality to your bibtex entries which
: are stored as Org-mode headlines using org-bibtex.el.  Most
: features expect that you keep all of your reading notes in a single
: file, set the `obe-bibtex-file' variable to the path to this file.

*** New exporters in contrib/

Nicolas export engine org-export.el lives in the =contrib/lisp/= directory.
To use it:

: Make sure contrib/lisp/ is in your load-path
: M-: (require 'org-export) RET
: M-: (require 'org-e-latex) RET ; or any other library
: M-x org-export-dispatch RET

These are the currently available exporters:

- =org-e-ascii.el= by Nicolas
- =org-e-beamer.el= by Nicolas
- =org-e-groff.el= by Luis Anaya
- =org-e-html.el= by Jambunathan
- =org-e-latex.el= by Nicolas
- =org-e-man.el= by Luis Anaya
- =org-e-odt.el= by Jambunathan
- =org-e-texinfo.el= by Jonathan Leech-Pepin
- =org-md.el= by Nicolas 

If we have enough testers, the new export engine is very likely to replace
the current one for the next major release.  Please report any problem on
the mailing list!

If you want to write a new export backend based on this export engine,
please check the [[http://orgmode.org/worg/dev/org-export-reference.html][online documentation]].

*** New Babel languages

**** Support for execution of Scala code blocks (see lisp/ob-scala.el)
**** Support for execution of IO code blocks (see lisp/ob-io.el)

** Incompatible changes

   - If your code relies on =org-write-agenda=, please use
     [[doc::org-agenda-write][org-agenda-write]] from now on.

   - If your code relies on =org-make-link=, please use =concat=
     instead.

   - =org-link-to-org-use-id= has been renamed to
     =org-id-link-to-org-use-id= and its default value is nil.  The
     previous default was =create-if-interactive-and-no-custom-id=.

** New features and user-visible changes

*** Org Element

org-element.el is a toolbox for parsing and analysing "elements" in an
Org-mode buffer.  This has been written by Nicolas Goaziou and has been
tested for quite some time.  It is now part of Org's core and many core
functions rely on this package.

Two functions might be particularily handy for users: =org-element-at-point=
and =org-element-context=.  See the docstrings for more details.

Below is a list of editing and navigating commands that now rely on
org-element.el.

**** [[doc::org-fill-paragraph][org-fill-paragraph]] has been completely rewritten

The filling mechanisms now rely on org-element, trying to do the right
thing on each element in various contexts.  E.g. filling in a list item
will preserve indentation; filling in message-mode will fall back on the
relevant filling functions; etc.

**** [[doc::org-metaup][org-metaup]] and [[doc::org-metadown][org-metadown]] will drag the element backward/forward

If you want to get the old behavior (i.e. moving a line up and down), you
can first select the line as an active region, then =org-metaup/down= to
move the region backward/forward.  This also works with regions bigger than
just one line.

**** [[doc::org-up-element][org-up-element]] and [[doc::org-down-element][org-down-element]] (respectively =C-c C-^= and =C-c C-_=)

This will move the point up/down in the hierarchy of elements.

**** [[doc::org-backward-element][org-backward-element]] and [[doc::org-forward-element][org-forward-element]] (respectively =M-{= and =M-}=)

This will move the point backward/forward in the hierarchy of elements.

**** [[doc::org-narrow-to-element][org-narrow-to-element]] will narrow to the element at point
**** [[doc::org-mark-element][org-mark-element]] will mark the element at point

This command is bound to =M-h= and will mark the element at point.  If the
point is at a paragraph, it will mark the paragraph.  If the point is at a
list item, it will mark the list item.  Etc.

Note that if point is at the beginning of a list, it will mark the whole
list.

To mark a subtree, you can either use =M-h= on the headline (since there is
no ambiguity about the element you're at) or [[doc::org-mark-subtree][org-mark-subtree]] (=C-c @=)
anywhere in the subtree.

Invoking [[doc::org-mark-element][org-mark-element]] repeatedly will try to mark the next element on
top of the previous one(s).  E.g. hitting =M-h= twice on a headline will
mark the current subtree and the next one on the same level.

*** Org Agenda

**** New option [[doc::org-agenda-sticky][org-agenda-sticky]]

There is a new option =org-agenda-sticky= which enables "sticky"
agendas.  Sticky agendas remain opened in the background so that you
don't need to regenerate them each time you hit the corresponding
keystroke.  This is a big time saver.

When [[doc::org-agenda-sticky][org-agenda-sticky]] is =non-nil=, the agenda buffer will be named
using the agenda key and its description.  In sticky agendas, the =q=
key will just bury the agenda buffers and further agenda commands will
show existing buffer instead of generating new ones.  

If [[doc::org-agenda-sticky][org-agenda-sticky]] is set to =nil=, =q= will kill the single agenda
buffer.

**** New option [[doc::org-agenda-custom-commands-contexts][org-agenda-custom-commands-contexts]]

Setting this option allows you to define specific context where
agenda commands should be available from.  For example, when set
to this value

#+BEGIN_SRC emacs-lisp
  (setq org-agenda-custom-commands-contexts
        '(("p" (in-file . "\\.txt"))))
#+END_SRC

then the =p= agenda command will only be available from buffers
visiting *.txt files.  See the docstring and the manual for more
details on how to use this.

**** Changes in bulk actions

The set of commands starting with =k ...= as been deleted and the
features have been merged into the "bulk action" feature.

After you marked some entries in the agenda, if you call =B s=, the
agenda entries will be rescheduled using the date at point if on a
date header.  If you are on an entry with a timestamp, you will be
prompted for a date to reschedule your marked entries to, using the
timestamp at point as the default prompt.

You can now use =k= to capture the marked entry and use the date at
point as an overriding date for the capture template.

To bind this behavior to =M-x org-capture RET= (or its keybinding),
set the new option [[doc::org-capture-use-agenda-date][org-capture-use-agenda-date]] to =t=.

**** =N= and =P= in the agenda will move to the next/previous item

**** New command [[doc::org-agenda-bulk-mark-all][org-agenda-bulk-mark-all]] to mark all items

This new command is bound to =*= in agenda mode.

There is also a new option [[doc::org-agenda-bulk-mark-char][org-agenda-bulk-mark-char]] to set the character
to use as a mark for bulk actions.

**** New option [[doc::org-agenda-persistent-marks][org-agenda-persistent-marks]]

When set to =non-nil=, marks will remain visible after a bulk action.  You
can temporarily toggle this by pressing =p= when invoking
[[doc::org-agenda-bulk-action][org-agenda-bulk-action]].

**** New option [[doc::org-agenda-skip-timestamp-if-deadline-is-shown][org-agenda-skip-timestamp-if-deadline-is-shown]]

=Non-nil= means skip timestamp line if same entry shows because of
deadline.

In the agenda of today, an entry can show up multiple times because it has
both a plain timestamp and has a nearby deadline.  When this variable is t,
then only the deadline is shown and the fact that the entry has a timestamp
for or including today is not shown.  When this variable is =nil=, the
entry will be shown several times.

**** New =todo-unblocked= and =nottodo-unblocked= skip conditions

See the [[http://orgmode.org/w/?p%3Dorg-mode.git%3Ba%3Dcommit%3Bh%3Df426da][git commit]] for more explanations.

**** Allow category filtering in the agenda

You can now filter the agenda by category.  Pressing "<" will filter by
the category of the item on the current line, and pressing "<" again will
remove the filter.  You can combine tag filters and category filters.

You can use =org-agenda-category-filter= in your custom agenda views and
=org-agenda-category-filter-preset= in your main configuration.

See also the new command [[doc::org-agenda-filter-by-top-category][org-agenda-filter-by-top-category]]: hitting `^'
will filter by "Top" category: only show entries that are of the same
category than the Top category of the entry at point.
*** Org Links

**** Inserting links

When inserting links through [[doc::org-insert-link][org-insert-link]], the description is now
displayed first, followed by the literal link, as the description is often
more useful when you look for the link you want to insert.

Completion now complete both literal links and description.  If you
complete a description, the literal link and its description will be
inserted directly, whereas when you complete the literal link, you will be
prompted for a description (as with Org 7.8.)

In the completion buffer, links to the current buffer are now highlighted.

**** New templates =%h= and =%(sexp)= for abbreviated links

On top of =%s= template, which is replaced by the link tag in abbreviated
links, you can now use =%h= (which does the same than =%s= but does not
hexify the tag) and =%(sexp)= (which can run a function that takes the tag
as its own argument.)

**** New link type =help=

You can now create links from =help= buffers.

For example, if you request help for the command [[doc::org-agenda][org-agenda]] with =C-h f
org-agenda RET=, creating a link from this buffer will let you go back to
the same buffer.

**** New command [[doc::org-insert-all-links][org-insert-all-links]]

This will insert all links as list items.  With a universal prefix
argument, links will not be deleted from =org-stored-links=.

This new command is bound to =C-c C-M-l=.

**** New option [[doc::org-url-hexify-p][org-url-hexify-p]]

When set to =nil=, the =URL= part of a link will not be hexified.

**** Org can now open multiple shell links


**** New option [[doc::org-doi-server-url][org-doi-server-url]] to specify an alternate DOI server

**** RET now follows time stamps links
*** Org Editing

**** [[doc::org-todo][org-todo]] and =org-archive-*= can now loop in the active region

When [[doc::org-loop-over-headlines-in-active-region][org-loop-over-headlines-in-active-region]] is =non-nil=, using [[doc::org-todo][org-todo]]
or =org-archive-*= commands in the active region will loop over headlines.
This is handy if you want to set the TODO keyword for several items, or
archive them quickly.
**** You can now set tags for headlines in a region

If [[doc::org-loop-over-headlines-in-active-region][org-loop-over-headlines-in-active-region]] is =non-nil=, then selecting
the region and hitting =C-c C-q= will set the tags for all headlines in the
region.

**** New command [[doc::org-insert-drawer][org-insert-drawer]] to insert a drawer interactively
**** Comments start with "^[ \t]*# " anywhere on a line

Note that the space after the hashtag is mandatory.  Comments with "^#+"
are not supported anymore.

**** New speed key =#= to toggle the COMMENT cookie on a headline
**** =indent-region-function= is now set to [[doc::org-indent-region][org-indent-region]]

=C-M-\= should now produce useful results.

You can unindent the buffer with [[doc::org-unindent-buffer][org-unindent-buffer]].

**** New option [[doc::org-allow-promoting-top-level-subtree][org-allow-promoting-top-level-subtree]]

When =non-nil=, =S-M-<left>= will promote level-1 subtrees containing other
subtrees.  The level-1 headline will be commented out.  You can revert to
the previous state with =M-x undo RET=.

*** Org Clock
    
**** New keybinding =C-c C-x C-z= for [[doc::org-clock-resolve][org-clock-resolve]]
**** New keybinding =C-c C-x C-q= for [[doc::org-clock-cancel][org-clock-cancel]]
**** New command [[doc::org-clock-in-last][org-clock-in-last]] to clock in the last clocked item

This command is bound to =C-c C-x C-x= and will clock in the last clocked
entry, if any.

**** =C-u M-x= [[doc::org-clock-out][org-clock-out]] =RET= now prompts for a state to switch to
**** =S-M-<up/down>= on a clock timestamps adjusts the previous/next clock
**** New option [[doc::org-clock-continuously][org-clock-continuously]]

When set to =nil=, clocking in a task will first try to find the last
clocked out task and restart from when that task was clocked out.

You can temporarily activate continuous clocking with =C-u C-u
C-u M-x= [[doc::org-clock-in][org-clock-in]] =RET= (three universal prefix arguments) and
=C-u C-u M-x= [[org-clock-in-last][org-clock-in-last]] =RET= (two universal prefix
arguments).

**** New option [[doc::org-clock-frame-title-format][org-clock-frame-title-format]]

This option sets the value of =frame-title-format= when clocking in.

**** New options for controlling the clockreport display

[[doc::org-clock-file-time-cell-format][org-clock-file-time-cell-format]]: Format string for the file time cells in
clockreport.

[[doc::org-clock-total-time-cell-format][org-clock-total-time-cell-format]]: Format string for the total time cells
in clockreport.

**** New options for controlling the clock/timer display

[[doc::org-clock-clocked-in-display][org-clock-clocked-in-display]]: control whether the current clock is
displayed in the mode line and/or frame title.

[[doc::org-timer-display][org-timer-display]]: control whether the current timer is displayed in the
mode line and/or frame title.

This allows the clock and timer to be displayed in the frame title instead
of, or as well as, the mode line.  This is useful for people with limited
space in the mode line but with ample space in the frame title.

*** Org Appearance

**** New option [[doc::org-custom-properties][org-custom-properties]]

The visibility of properties listed in this options can be turn on/off with
[[doc::org-toggle-custom-properties-visibility][org-toggle-custom-properties-visibility]].  This might be useful for
properties used by third-part tools or that you don't want to see
temporarily.

**** New command [[doc::org-redisplay-inline-images][org-redisplay-inline-images]]

This will redisplay all images.  It is bound to =C-c C-x C-M-v=.

**** New entities in =org-entities.el=

There are these new entities:

:     ("tilde" "\\~{}" nil "&tilde;" "~" "~" "~")
:     ("slash" "/" nil "/" "/" "/" "/")
:     ("plus" "+" nil "+" "+" "+" "+")
:     ("under" "\\_" nil "_" "_" "_" "_")
:     ("equal" "=" nil "=" "=" "=" "=")
:     ("asciicirc" "\\textasciicircum{}" nil "^" "^" "^" "^")

**** New face =org-list-dt= for definition terms
**** New face =org-date-selected= for the selected calendar day
**** New face value for =org-document-title=

The face is back to a normal height.

*** Org Columns

**** New speed command =:= to activate the column view
**** New special property =CLOCKSUM_T= to display today's clocked time

You can use =CLOCKSUM_T= the same way you use =CLOCKSUM=.  It will display
the time spent on tasks for today only.

**** Use the =:COLUMNS:= property in columnview dynamic blocks

If the =:COLUMNS:= is set in a subtree, the columnview dynamic block will
use its value as the column format.

**** Consider inline tasks when computing a sum

*** Org Dates and Time Stamps

**** Enhanced [[doc::org-sparse-tree][org-sparse-tree]]

=C-c /= can now check for time ranges.

When checking for dates with =C-c /= it is useful to change the type of
dates that you are interested in.  You can now do this interactively with
=c= after =C-c /= and/or by setting [[doc::org-sparse-tree-default-date-type][org-sparse-tree-default-date-type]] to
the default value you want.

**** Support for hourly repeat cookies

You can now use

: SCHEDULED: <2012-08-20 lun. 08:00 +1h>

if you want to add an hourly repeater to an entry.

**** =C-u C-u C-c .= inserts a time-stamp with no prompt
**** When (setq [[doc::org-read-date-prefer-future][org-read-date-prefer-future]] 'time), accept days in the prompt

"8am Wed" and "Wed 8am" are now acceptable values when entering a date from
the prompt.  If [[doc::org-read-date-prefer-future][org-read-date-prefer-future]] is set to =time=, this will
produce the expected prompt indication.

**** New option [[doc::org-datetree-add-timestamp][org-datetree-add-timestamp]]

When set to =non-nil=, datetree entries will also have a timestamp.  This
is useful if you want to see these entries in a sparse tree with =C-c /=.

*** Org Capture

**** New command [[doc::org-capture-string][org-capture-string]]

M-x [[doc::org-capture-string][org-capture-string]] RET will prompt for a string and a capture template.
The string will be used as an annotation for the template.  This is useful
when capturing in batch mode as it lets you define the content of the
template without being in Emacs.

**** New option [[doc::org-capture-templates-contexts][org-capture-templates-contexts]]

Setting this option allows you to define specific context where
capture templates should be available from.  For example, when
set to this value

#+BEGIN_SRC emacs-lisp
  (setq org-capture-templates-contexts
        '(("c" (in-mode . "message-mode"))))
#+END_SRC

then the =c= capture template will only be available from
=message-mode= buffers.  See the docstring and the manual for
more details on how to use this.

**** New =%l= template to insert the literal link
**** New option [[doc::org-capture-bookmark][org-capture-bookmark]]

Org used to automatically add a bookmark with capture a note.  You can now
turn this on by setting [[doc::org-capture-bookmark][org-capture-bookmark]] to =nil=.

**** Expand =%<num>= escape sequences into text entered for <num>'th =%^{PROMPT}= escape

See the manual for more explanations.

**** More control over empty lines

You can use =:empty-lines-before= and =:empty-lines-after= to control the
insertion of empty lines.  Check the manual for more explanations.

**** New hook [[doc::org-capture-prepare-finalize-hook][org-capture-prepare-finalize-hook]]

This new hook runs before the finalization process starts.

*** Org Export

**** New functions =orgtbl-to-table.el= and =orgtbl-to-unicode=

=orgtbl-to-table.el= convert the table to a =table.el= table, and
=orgtbl-to-unicode= will use =ascii-art-to-unicode.el= (when
available) to print beautiful tables.

**** [[doc::org-table-export][org-table-export]] now a bit clever about the target format

When you specify a file name like =table.csv=, [[doc::org-table-export][org-table-export]] will now
suggest =orgtbl-to-csv= the default method for exporting the table.

**** New option [[doc::org-export-date-timestamp-format][org-export-date-timestamp-format]]

The option allows to set a time string format for Org timestamps
in the #+DATE option.
**** LaTeX: New options for exporting table rules :tstart, :hline and :tend

See [[doc::org-export-latex-tables-hline][org-export-latex-tables-hline]] and [[doc::org-export-latex-tables-tend][org-export-latex-tables-tend]].

**** LaTeX: You can now set =:hfmt= from =#+ATTR_LaTeX=
**** Beamer: Add support and keybinding for the =exampleblock= environment

Add support for these languages in [[doc::org-export-language-setup][org-export-language-setup]].  More
languages are always welcome.

**** Beamer: New option [[doc::org-beamer-inherited-properties][org-beamer-inherited-properties]]

This option allows Beamer export to inherit some properties.
Thanks to Carsten for implementing this.

**** ODT: Add support for ODT export in org-bbdb.el
**** ODT: Add support for indented tables (see [[http://orgmode.org/w/?p%3Dorg-mode.git%3Ba%3Dcommit%3Bh%3De9fd33][this commit]] for details)
**** ODT: Improve the conversion from ODT to other formats
**** ASCII: Swap the level-1/level-2 characters to underline the headlines
**** Support for Chinese, simplified Chinese, Russian, Ukrainian and Japanese
**** HTML: New option [[doc::org-export-html-date-format-string][org-export-html-date-format-string]]

Format string to format the date and time in HTML export.
Thanks to Sébastien Vauban for this patch.

*** Org Babel

**** New =:results drawer= parameter

=:results drawer= replaces =:results wrap=, which is deprecated but still
supported.

**** =:results org= now put results in a =#+BEGIN_SRC org= block

=:results org= used to put results in a =#+BEGIN_ORG= block but it now puts
results in a =#+BEGIN_SRC org= block, wich comma-escaped lines.

=#+BEGIN_ORG= blocks are obsolete.

**** Exporting =#+BEGIN_SRC org= blocks exports the code

It used to exports the results of the code.

*** Miscellaneous

**** New menu entry for [[doc::org-refile][org-refile]]
**** Allow capturing to encrypted entries

If you capture to an encrypted entry, it will be decrpyted before
inserting the template then re-encrypted after finalizing the capture.

**** Inactive timestamps are now handled in tables

Calc can do computation on active time-stamps like <2012-09-29 sat.>.
Inactive time-stamps in a table's cell are now internally deactivated so
that Calc formulas can operate on them.

**** [[doc::org-table-number-regexp][org-table-number-regexp]] accept comma as a decimal mark to represent numbers
**** Org allows a new property =APPT_WARNTIME=

You can set it with the =W= speedy key or set it manually.  When set,
exporting to iCalendar and [[doc::org-agenda-to-appt][org-agenda-to-appt]] will use the value of this
property as the number of minutes for the warning alarm.

**** New command [[doc::org-inc-effort][org-inc-effort]]

This will increment the effort value.

It is bound to =C-c C-x E= and to =E= as a speedy command.

**** Attach: Add support for creating symbolic links

`org-attach-method' now supports a new method =lns=, allowing to attach
symbolic links.
**** Archive: you can now archive to a datetree

**** New option [[doc::org-inlinetask-show-first-star][org-inlinetask-show-first-star]]

=Non-nil= means display the first star of an inline task as
additional marker.  When =nil=, the first star is not shown.

**** New option [[doc::org-latex-preview-ltxpng-directory][org-latex-preview-ltxpng-directory]]

This lets you define the path for the =ltxpng/= directory.

**** You can now use imagemagick instead of dvipng to preview LaTeX fragments
**** You can now turn off [[doc::orgstruct++-mode][orgstruct++-mode]] safely
**** =C-u C-c C-c= on list items to add check boxes

=C-u C-c C-c= will add an empty check box on a list item.

When hit from the top of the list, it will add check boxes for all top
level list items.

**** =org-list-ending-method= and =org-list-end-regexp= are now obsolete

Fall back on using =org-list-end-re= only, which see.

**** org-feed.el now expands =%(sexp)= templates
**** New option [[doc::org-protocol-data-separator][org-protocol-data-separator]]

**** New option [[doc::org-ditaa-jar-option][org-ditaa-jar-option]] to specify the ditaa jar file

**** New possible value for [[doc::org-loop-over-headlines-in-active-region][org-loop-over-headlines-in-active-region]]

When [[doc::org-loop-over-headlines-in-active-region][org-loop-over-headlines-in-active-region]] is set to
=start-level=, the command will loop over the active region but
will only act upon entries that are of the same level than the
first headline in the region.

**** New option [[doc::org-habit-show-all-today][org-habit-show-all-today]]

When set to =t=, show all (even unscheduled) habits on today's agenda.

** Important bug fixes

*** M-TAB on options keywords perform completion correctly again

If you hit =M-TAB= on keywords like =#+TITLE=, Org will try to
perform completion with meaningful values.

*** Add licenses to javascript embedded and external code snippets

Embedded javascript code produced when exporting an Org file to HTML is now
licensed under GPLv3 (or later), and the copyright is owned by the Free
Software Foundation, Inc.

The javascript code for embedding MathJax in the browser mentions the
MathJax copyright and the Apache 2.0 license.

The javascript code for embedding =org-injo.js= in the browser mentions the
copyright of Sebastian Rose and the GPLv3 (or later) license.

=org-export-html-scripts= is now a variable, so that you can
adapt the code and the license to your needs.

See http://www.gnu.org/philosophy/javascript-trap.html for
explanations on why these changes were necessary.
* Older changes

For older Changes, see [[file:Changes_old.org][old changes]].

