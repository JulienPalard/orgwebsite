#+title:     Org mode for Emacs -- Features
#+author:    Carsten Dominik
#+email:     carsten at orgmode dot org
#+setupfile: setup.org
#+description: Org: an Emacs Mode for Notes, Planning, and Authoring
#+include: "./preamble.html" export html

#+begin_export html
<style>
  .side-fig img {
    filter: invert(1.4%);
    box-shadow: none;
  }
  #content,.outline-2,div.banner {
    margin-left: 0;
  }
</style>

<div class="banner slim"> <p id="a-quote"></p> </div>
#+end_export

* Simple Syntax
:PROPERTIES:
:CUSTOM_ID: simple-syntax
:HTML_CONTAINER_CLASS: side-fig
:END:

#+ATTR_HTML: :class main-image
[[file:img/features/simple-syntax.png]]

** Description

Org mode can perform complex tasks, but it is built of a simple syntax. All you
need to get started is demonstrated in the image.

*** More

More on [[https://orgmode.org/manual/Markup-for-Rich-Contents.html][the markup syntax]] (manual)

* Outline/Folded Editing
  :PROPERTIES:
  :CUSTOM_ID: editing
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+ATTR_HTML: :class main-image
[[file:img/features/folding.gif]]

** Description

Org is a folding outline editor.

Easily show and hide sections using the =tab= key.

Navigate and edit sections effortlessly with Org keyboard shortcuts.

You can easily navigate through headlines and (un)fold (sub)sections of
your Org documents.

*** More

More on [[https://orgmode.org/manual/Document-structure.html#Document-structure][editing and document structure]] (manual)

* Working with source code
  :PROPERTIES:
  :CUSTOM_ID: babel
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+ATTR_HTML: :class main-image
[[file:img/features/babel.gif]]

** Description

*Org can syntax highlight and /execute/ live code right inside your Org text.*

Write code right in your Org file, execute it and see its result right in that
/same/ Org file. [[https://orgmode.org/worg/org-contrib/babel/languages.html][Many languages supported]], among them Python, Javascript, Graphviz
Dot, PlantUML, Shell commands, and Elisp.

Students of Computer Science might ask, "hey does Org support [[http://en.wikipedia.org/wiki/Literate_programming][literate
programming]]?" Oh yes, Org does support it.

Org makes [[http://en.wikipedia.org/wiki/Literate_programming][literate programming]] a handy and natural way to deal with code.

You can insert code snippets, have them fontified in the Org buffer,
compute the results in-file and tangle your Org file to get a code source
file.

*** More

[[https://orgmode.org/manual/Working-with-source-code.html#Working-with-source-code][Working with source code]] (manual)

List of [[https://orgmode.org/worg/org-contrib/babel/languages.html][supported languages]] (Worg)

* Tables
  :PROPERTIES:
  :CUSTOM_ID: tables
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+ATTR_HTML: :class main-image
[[file:img/features/tables.gif]]

** Description

Org is a great plain-text table editor.

Navigate between cells using the =tab= key. Press the =enter= key to enter a value.
Move rows and columns with easy keyboard shortcuts. /Never/ have to reformat a
table layout because of different cell value widths.

You can import tables from =.csv= and =.tsv= files, or directly from the
current buffer; you can then export them in all the formats supported by
Org (see below).

Org can also be used as a /spreadsheet/ system.

You can add formulas using the [[http://www.gnu.org/software/emacs/manual/html_mono/calc.html][Calc Emacs package]] or Emacs lisp code.

*** More

The [[https://orgmode.org/manual/Built_002din-table-editor.html#Built_002din-table-editor][built-in table editor]] (manual)

Org as a [[https://orgmode.org/manual/The-spreadsheet.html#The-spreadsheet][spreadsheet]] system (manual)

Introduction to [[https://orgmode.org/worg/org-tutorials/tables.html][editing tables]] (Worg)

Using [[https://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html][Org as a spreadsheet]] (Worg)

* Publishing
  :PROPERTIES:
  :CUSTOM_ID: publishing
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+ATTR_HTML: :class main-image
[[file:img/features/exports.gif]]

** Description

*Org is an authoring and publication tool.*

Org doesn't have to be used for TODO list management and dayplanning.

Use the intutive Org markup syntax to create source documents that can exported into many different formats including:
- =HTML=
- $\LaTeX{}$
- =ODT=
- and much more!

Developers can easily create new backends for their favorite format (see
the [[https://orgmode.org/worg/dev/org-export-reference.html][reference documentation]]).

You can also define /publishing projects/ with one or more =.org= file(s),
and one or more publication backends.

*** More

More on [[https://orgmode.org/manual/Markup.html#Markup][markup]] (manual)

More on [[https://orgmode.org/manual/Exporting.html#Exporting][exporting]] (manual)

More on [[https://orgmode.org/manual/Publishing.html#Publishing][publishing]] (manual)

[[https://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html][Tutorial on publishing]] to =HTML= (Worg)

[[https://orgmode.org/worg/org-tutorials/org-latex-export.html][Tutorial on publishing]] to $\LaTeX{}$ (Worg)

* Extensibility
  :PROPERTIES:
  :CUSTOM_ID: extensibiliy
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+ATTR_HTML: :class main-image
[[file:img/features/links.png]]

** Description
Org-mode isn't just capable out of the box, it's
spectacularly extensible.

Take links as an example. Updating docs for a
project and find yourself linking to GitHub issues
a lot? You can add a new link type for the
document (or globally) where in
~[[issue:74][version mismatch]]~ the link expands to
=https://github.com/author/repo/issues/74=.

This is just the beginning, you can define
arbitrary functions to resole links, link to files
on remote machines with [[https://www.emacswiki.org/emacs/TrampMode][Tramp]], and more.

In Org-mode, extensibility isn't an afterthought --- it's baked right into the
foundations.

* With your mobile phone
  :PROPERTIES:
  :CUSTOM_ID: mobile
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+ATTR_HTML: :style float:right;box-shadow:none; :width 400px
[[file:img/external/beorg.png]]

** Description

On iOS you have the wonderful [[https://beorgapp.com/][beorg]], which supports many of Org's features, and
can sync over a variety of services.

On Android there is [[http://www.orgzly.com/][orgzly]], which is developed over on [[https://github.com/orgzly/orgzly-android][GitHub]].

*** COMMENT More
* Todo List Management
  :PROPERTIES:
  :CUSTOM_ID: planning
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+ATTR_HTML: :class main-image
[[file:img/features/planning.gif]]

** Description

*Org is a TODO list manager.*

Turn sections into /tasks/ by adding keywords representing the state of that task. Switch states easily with the keyboard shortcut =S-<left/right>=.

See your tasks in a planner (called an /Agenda/ in Org) by adding timestamps to them.

All done with just plain text markup.

Switching from one TODO keyword to another is =C-c C-t= or
=S-<left/right>=.
Want a different set of keywords to track your task?
No problem --- Org lets you customize them to support your workflow.

Each item can also receive planning meta-data: scheduled and/or deadline
cookies, tags, properties, etc.

*** More

More on [[https://orgmode.org/manual/TODO-items.html#TODO-items][TODO items]] (manual)

Handling [[https://orgmode.org/manual/Dates-and-times.html#Dates-and-times][dates and times]] (manual)

* Time Tracking (Clocking)
  :PROPERTIES:
  :CUSTOM_ID: clocking
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+ATTR_HTML: :class main-image
[[file:img/features/clocking.png]]

** Description

Keep track of the time you spend on your tasks with Org /Clocking/.

Org provides easy keyboard shortcuts to /clock in/ and /clock out/ of tasks.

At end of the day, easily generate reports of how you spent your time.

Clocking in a task is =C-c C-x C-i=.

Clocking out a task is =C-c C-x C-o=.

You can use =I= and =O= from an agenda buffer.

Clocking logs are stored in a drawer.

Org makes it easy to clock in and out and to produce nice reports, which
you can customize to suit the needs of your hairy boss.

*** More

More on [[https://orgmode.org/manual/Clocking-work-time.html#Clocking-work-time][clocking tasks]] (manual)

* Agendas
  :PROPERTIES:
  :CUSTOM_ID: agendas
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+ATTR_HTML: :class main-image
[[file:img/features/agenda.png]]

** Description

Plan your tasks with /agenda views/ in Org.

/Agenda views/ are reports generated from your set of tasks.

Agenda views/ let you see your tasks on a daily, weekly, and monthly basis with /highly/ configurable editing.

Plan your day your way with Org.

Even with large =.org= files and thousands of tasks, it is easy to focus on
what you need to do for each context.

The built-in agenda views display the scheduled and deadline task for the
week, TODO lists and stuck projects.

The notion of /agenda view/ can be customized to display what you need: a
view for the day/month, restricted to a set of TODO keywords, using
specific tag, etc.

This is one of the key aspect of Org: you can adapt Org to your workflow
while stabilizing it.

*** More

More on [[https://orgmode.org/manual/Agenda-views.html#Agenda-views][agendas views]] (manual)

Tutorial on [[https://orgmode.org/worg/org-tutorials/org-custom-agenda-commands.html][agenda commands]] (Worg)

* Capturing
  :PROPERTIES:
  :CUSTOM_ID: capturing
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+ATTR_HTML: :class main-image :style "filter: invert(96%) hue-rotate(270deg);"
[[file:img/features/capturing.gif]]

** Description

Adding TODO items to your =.org= files is called /capturing/.

You can capture from everywhere, both within Emacs and from other
applications like your web browser, pdf viewer, etc.

Capture templates allow you to tell what information you want to capture
from various contexts (the file name, the current date, the region, etc.)

*** More

More on [[https://orgmode.org/manual/Capture.html#Capture][capturing]] (manual)

